[gd_scene load_steps=9 format=2]

[ext_resource path="res://assets/roundshadow.png" type="Texture" id=1]
[ext_resource path="res://scr/bullets/Meteor.gd" type="Script" id=2]

[sub_resource type="Shader" id=1]
code = "/* 
Original shader from Fubucci â€“ https://www.febucci.com/2019/05/fire-shader/ 
Converted to Godot Shader Language by Godot Shaders - godotshaders.com/shader/2D-fire/
*/

shader_type canvas_item;

uniform sampler2D noise_tex;
uniform sampler2D gradient_tex;

uniform vec4 brighter_color : hint_color = vec4(1.0, 0.8, 0.0, 1.0);
uniform vec4 middle_color : hint_color  = vec4(1.0, 0.56, 0.0, 1.0);
uniform vec4 darker_color : hint_color  = vec4(0.64, 0.2, 0.05, 1.0);

uniform float spread : hint_range(0.0, 1.0) = 0.5;

void fragment()
{
	
	float noise_value = texture(noise_tex, UV + vec2(0.0, TIME)).x;
	// The .yx swizzle is when using the built in horizontal gradient texture. If you have a vertical gradient texture remove .yx
	float gradient_value = texture(gradient_tex, UV.yx).x;
	
	gradient_value -= smoothstep(spread, spread + 0.5, length(UV + vec2(-0.5, -0.5)) / spread);
	
	float step1 = step(noise_value, gradient_value);
	float step2 = step(noise_value, gradient_value - 0.2);
	float step3 = step(noise_value, gradient_value - 0.4);
	
	vec3 bd_color = mix(brighter_color.rgb, darker_color.rgb, step1 - step2);
	
	vec4 color = vec4(bd_color, step1);
	color.rgb = mix(color.rgb, middle_color.rgb, step2 - step3);
	
	COLOR = color;
}"

[sub_resource type="OpenSimplexNoise" id=2]

[sub_resource type="NoiseTexture" id=3]
width = 836
height = 844
seamless = true
noise = SubResource( 2 )

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 1 )
shader_param/brighter_color = Color( 1.12, 1.1, 0.75, 1 )
shader_param/middle_color = Color( 1, 0.56, 0, 1 )
shader_param/darker_color = Color( 9.83, 0.2, 0.05, 1 )
shader_param/spread = 0.579
shader_param/noise_tex = SubResource( 3 )

[sub_resource type="CircleShape2D" id=5]
radius = 256.0

[sub_resource type="Animation" id=6]
resource_name = "default"
length = 2.0
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.4, 1.7, 1.8 ),
"transitions": PoolRealArray( 1, 9.84915, 1, 9.84915 ),
"update": 0,
"values": [ Vector2( 0.5, 0.5 ), Vector2( 2, 2 ), Vector2( 0.2, 0.2 ), Vector2( 2, 2 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5, 1.7 ),
"transitions": PoolRealArray( 11.7127, 11.7127, 1 ),
"update": 0,
"values": [ Color( 0.372549, 0.372549, 0.372549, 0.0196078 ), Color( 0.45098, 0.0117647, 0.0117647, 0.0784314 ), Color( 1, 1, 1, 1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Sprite:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("CollisionShape2D:disabled")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 1.7, 1.8, 2 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ true, true, false, true ]
}
tracks/4/type = "method"
tracks/4/path = NodePath(".")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 2 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "queue_free"
} ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("Light2D:energy")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0, 0.5, 1.7, 2 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.2, 0.8, 2.0, 0.0 ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("Light2D:color")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 0.447059, 0, 1 ) ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("Light2D:enabled")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0, 1.9, 2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ true, true, false ]
}

[node name="Meteor" type="Area2D"]
z_index = 1
collision_layer = 0
collision_mask = 15
script = ExtResource( 2 )

[node name="Sprite" type="Sprite" parent="."]
modulate = Color( 0.372549, 0.372549, 0.372549, 0.0196078 )
material = SubResource( 4 )
scale = Vector2( 0.5, 0.5 )
texture = ExtResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
visible = false
shape = SubResource( 5 )
disabled = true

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/default = SubResource( 6 )

[node name="Tween" type="Tween" parent="."]

[node name="Light2D" type="Light2D" parent="."]
texture = ExtResource( 1 )
color = Color( 1, 0.447059, 0, 1 )
energy = 0.2
mode = 2
range_layer_min = -100
range_layer_max = 1
[connection signal="area_entered" from="." to="." method="_on_Meteor_area_entered"]
[connection signal="body_entered" from="." to="." method="_on_Meteor_body_entered"]
